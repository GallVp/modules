
nextflow_process {

    name "Test Process KAT_HIST"
    script "../main.nf"
    process "KAT_HIST"

    tag "modules"
    tag "modules_nfcore"
    tag "kat"
    tag "kat/hist"

    test("test-kat-hist-single-end") {
        config "./nextflow.config"

        when {
            process {
                """
                input[0] = [
				    [ id:'test', single_end:true ], // meta map
				    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/fastq/test2_1.fastq.gz', checkIfExists: true)
				]

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
					process.out.hist,
					file(process.out.json[0][1]).name,
					file(process.out.png[0][1]).name,
					process.out.ps,
					process.out.pdf,
					file(process.out.jellyfish_hash[0][1]).name,
					process.out.versions
					).match()
				}
            )
        }
    }

    test("test-kat-hist-paired-end") {

        when {
            process {
                """
                input[0] = [
				    [ id:'test', single_end:false ], // meta map
				    [
				        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/fastq/test2_1.fastq.gz', checkIfExists: true),
				        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/fastq/test2_2.fastq.gz', checkIfExists: true),
				    ]
                ]

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
					process.out.hist,
					file(process.out.json[0][1]).name,
					file(process.out.png[0][1]).name,
					process.out.ps,
					process.out.pdf,
					process.out.jellyfish_hash,
					process.out.versions
					).match()
				}
            )
        }
    }

    test("test-kat-hist-paired-end-stub") {
        options '-stub'

        when {
            process {
                """
                input[0] = [
				    [ id:'test', single_end:false ], // meta map
				    [
				        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/fastq/test2_1.fastq.gz', checkIfExists: true),
				        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/fastq/test2_2.fastq.gz', checkIfExists: true),
				    ]
                ]

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

}
