nextflow_process {

    name "Test Process KRONA_KTIMPORTTAXONOMY"
    config "./nextflow.config"
    script "../main.nf"
    process "KRONA_KTIMPORTTAXONOMY"

    tag "modules"
    tag "modules_nfcore"
    tag "krona"
    tag "krona/ktimporttaxonomy"



    test("test_krona_ktimporttaxonomy_reads") {

        when {
            params {
                module_args = '-t 3'
            }
            process {
                """
                input[0] = [
                    [id:'test',single_end:false],// meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/metagenome/test_1.kraken2.reads.txt', checkIfExists: true)
                    ]
                input[1] = file(params.modules_testdata_base_path + 'genomics/sarscov2/metagenome/krona_taxonomy.tab', checkIfExists: true)
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    file(process.out.html[0][1]).text.contains('Severe acute respiratory syndrome-related coronavirus'),
                    process.out.versions
                    ).match()
                }
            )
        }
    }


    test("test_krona_ktimporttaxonomy_report") {

        when {
            params {
                module_args = '-m 3 -t 5'
            }
            process {
                """
                input[0] = [
                    [id:'test',single_end:false],// meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/metagenome/test_1.kraken2.report.txt', checkIfExists: true)
                    ]
                input[1] = file(params.modules_testdata_base_path + 'genomics/sarscov2/metagenome/krona_taxonomy.tab', checkIfExists: true)
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    file(process.out.html[0][1]).text.contains('Severe acute respiratory syndrome-related coronavirus'),
                    process.out.versions
                    ).match()
                }
            )
        }
    }


    test("test_krona_ktimporttaxonomy_reads -- stub") {
        options '-stub'
        when {
            params {
                module_args = '-t 3'
            }
            process {
                """
                input[0] = [
                    [id:'test',single_end:false],// meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/metagenome/test_1.kraken2.reads.txt', checkIfExists: true)
                    ]
                input[1] = file(params.modules_testdata_base_path + 'genomics/sarscov2/metagenome/krona_taxonomy.tab', checkIfExists: true)
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }


    test("test_krona_ktimporttaxonomy_report -- stub") {
        options '-stub'
        when {
            params {
                module_args = '-m 3 -t 5'
            }
            process {
                """
                input[0] = [
                    [id:'test',single_end:false],// meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/metagenome/test_1.kraken2.report.txt', checkIfExists: true)
                    ]
                input[1] = file(params.modules_testdata_base_path + 'genomics/sarscov2/metagenome/krona_taxonomy.tab', checkIfExists: true)
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}